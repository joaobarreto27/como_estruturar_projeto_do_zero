[tool.poetry]
name = "como-estruturar-projeto-do-zero"
version = "0.1.0"
description = "Como estruturar projeto de ETL"
authors = ["joaobarreto27 <joao.vito1951@gmail.com>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
pandas = "^2.3.1"
openpyxl = "^3.1.5"
pytest = "^8.4.1"
isort = "^6.0.1"
pydocstyle = "^6.3.0"
pip-audit = "^2.9.0"
taskipy = "^1.14.1"
mkdocs = "^1.6.1"
mkdocstrings-python = "^1.16.12"
pygments = "^2.19.2"
mkdocs-material = "^9.6.15"
pymdown-extensions = "^10.16"
mkdocs-mermaid2-plugin = "^1.2.1"
pre-commit = "^4.2.0"
mypy = "^1.17.0"
types-setuptools = "^80.9.0.20250529"
pandas-stubs = "^2.3.0.250703"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
black = "^25.1.0"
mkdocs-mermaid2-plugin = "^1.2.1"
pre-commit = "^4.2.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.poetry.scripts]
docs-deploy = "mkdocs.__main__:cli"

[tool.taskipy.tasks]
format = "isort . && black ."
test = "poetry run pytest -v"
kill = "kill -9 $(lsof -t -i :8000)"
docs = "mkdocs serve"
docs-deploy = "mkdocs gh-deploy --clean"
commit = "pre-commit run --all-files"

[tool.mypy]
strict = true
show_error_codes = true
