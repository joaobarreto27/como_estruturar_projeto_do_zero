{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#workflow","title":"Workflow","text":"<pre><code>flowchart LR\n    subgraph ETL[Pipeline]\n        A(Multiplos Arquivos Excel) --&gt; B[Extract: extract_from_excel]\n        B --&gt; C[Gera uma lista de Dataframes]\n        C --&gt; D[Gera um Dataframe Consolidado]\n        D --&gt; |Salva o consolidado em Excel| E[Pasta Output: Um arquivo \u00fanico Excel]\n    end</code></pre>"},{"location":"#funcao-de-transformacao-de-dados","title":"Fun\u00e7\u00e3o de transforma\u00e7\u00e3o de dados","text":"<p>fun\u00e7\u00e3o para ler os arquivos de uma pasta data/input e retornar uma lista de dataframes</p> <p>args: input_path (str): caminho da pasta com os arquivos</p> <p>return: lista de dataframes</p> Source code in <code>src\\infrastructure\\data\\pipeline\\extract.py</code> <pre><code>def extract_from_excel(folder_name: str, extension_type) -&gt; List[pd.DataFrame]:\n    \"\"\"\n    fun\u00e7\u00e3o para ler os arquivos de uma pasta data/input e retornar uma lista de dataframes\n\n    args: input_path (str): caminho da pasta com os arquivos\n\n    return: lista de dataframes\n    \"\"\"\n\n    current_dir = Path(__file__).resolve().parents[1]\n    path_file = os.path.join(current_dir, folder_name)\n\n    all_files = glob.glob(os.path.join(path_file, f\"*.{extension_type}\"))\n\n    data_frame_list = []\n    for file in all_files:\n        data_frame_list.append(pd.read_excel(file))\n\n    return data_frame_list\n</code></pre>"},{"location":"anotacoes/","title":"TODO: Baixar arquivos que \u00e9 mostrado na aula, est\u00e1 no repositorio","text":"<ul> <li> <p>Qual Vers\u00e3o Python Utilizar - Recomend\u00e1vel a mais recente, por\u00e9m s\u00f3 aceitavel descer a vers\u00e3o, se alguma biblioteca utilizada, aceitar somente vers\u00f5es anteriores</p> </li> <li> <p>Comando <code>pyenv local \"numero da vers\u00e3o\"</code></p> </li> <li> <p>Pr\u00f3ximo passo \u00e9 executar o comando - <code>poetry config virtualenvs.in-project true</code> </p> </li> <li> <p>Comando <code>poetry init</code></p> </li> <li> <p>Comando <code>poetry env use \"numero da vers\u00e3o\"</code></p> </li> <li> <p>Comando <code>poetry shell</code></p> </li> <li> <p>Comando <code>git init</code></p> </li> <li> <p>Crie o arquivo <code>.gitignore</code>, podendo pesquisar em toptal git ignore</p> </li> <li> <p>Crie o reposit\u00f3rio no github, gitlab ou bitbucket</p> </li> <li> <p>Adicione o <code>pytest</code></p> </li> <li> <p>Pesquise sobre a pep 8</p> </li> <li> <p>Adicione o <code>isort</code></p> </li> <li> <p>Adicione o <code>blue</code></p> </li> <li> <p>Comando <code>isort .</code></p> </li> <li> <p>Comando <code>blue .</code></p> </li> <li> <p>Adicione o comando abaixo no <code>pyproject.toml</code>: <pre><code>    [tool.isort]\n    profile = \"black\"\n    know_third_party = []\n</code></pre></p> </li> <li> <p>Uma op\u00e7\u00e3o alternativa ao <code>blue</code> \u00e9 o <code>flake8</code></p> </li> <li> <p>Adicione o <code>pydocstyle</code></p> </li> <li> <p>Comando <code>pydocstyle .</code></p> </li> <li> <p>Adicione o <code>pip-audit</code></p> </li> <li> <p>Comando <code>pip-audit</code></p> </li> <li> <p>Adicione o <code>taskipy</code></p> </li> <li> <p>Adicione as tasks ao arquivo <code>pyproject.toml</code></p> </li> <li> <p>Adicione o <code>mkdocs</code></p> </li> <li> <p>Comando <code>mkdocs new .</code></p> </li> <li> <p>Comando <code>mkdocs serv</code></p> </li> <li> <p>Adicione <code>poetry add mkdocs mkdocstrings-python pygments mkdocs-material pymdown-extensions</code></p> </li> <li> <p>Adicionar o mkdocs ao github page     mkdocs serve     Adicione ao pyproject     <pre><code>[tool.poetry.scripts]\ndocs-deploy = \"mkdocs.__main__:cli\"\n</code></pre></p> <ul> <li>Adicione <code>poetry add mkdocs-git-revision-date-localized-plugin mkdocs-material --group dev</code> Execute o comando <code>mkdocs gh-deploy --clean</code></li> </ul> </li> <li> <p>Adicione <code>mkdocs-mermaid2-plugin</code></p> </li> <li> <p>Documenta\u00e7\u00e3o mermaid documenta\u00e7\u00e3o</p> </li> </ul>"}]}